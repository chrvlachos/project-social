{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","className","src","alt","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAUAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAiB3B,SAASC,IAKP,OACI,wBAAQC,QALa,WACrB,IAAMC,EAAW,IAAIb,IAASS,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAGrB,iCAIN,SAASG,IACP,OAAOP,EAAKQ,aACV,wBAAQL,QAAS,kBAAMH,EAAKS,WAA5B,sBAIJ,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAcZ,EAAUa,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAHnC,EAICC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EAJW,sBAKgBC,mBAAS,IALzB,mBAKXC,EALW,KAKAC,EALA,KAMZC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAEQ3B,EAAKQ,YAAvBoB,EAFU,EAEVA,IAAKC,EAFK,EAELA,SAFK,SAGZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAWzC,IAASU,UAAUgC,WAAWC,kBACzCN,MACAC,aAPgB,OASlBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAVvB,2CAAH,sDAajB,OAAQ,qCACN,iCACGjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACvD,sBAAMC,IAAKhC,OAEb,uBAAMiC,SAAUpB,EAAhB,UACE,uBAAOqB,MAAOvB,EAAWwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,QAAQG,YAAY,gBACpF,wBAAQC,KAAK,SAASC,UAAW5B,EAAjC,0BAMN,SAASkB,EAAYW,GAAQ,IAAD,EACKA,EAAMV,QAA9BV,EADmB,EACnBA,KAAMH,EADa,EACbA,IAAKC,EADQ,EACRA,SACZuB,EAAexB,IAAQ5B,EAAKQ,YAAYoB,IAAM,OAAS,WAC7D,OACA,sBAAKyB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAKzB,EAAU0B,IAAI,aACvB,4BAAIxB,OAMMyB,MA3Ef,WAAgB,IAAD,EACEC,YAAazD,GAArB0D,EADM,oBAEd,OACE,sBAAKL,UAAU,MAAf,UACE,mCACC,2DACA,cAAC9C,EAAD,OAED,kCACGmD,EAAO,cAAChD,EAAD,IAAe,cAACR,EAAD,UCpBfyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a39ca574.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB66_n7atgD9wVI2dWWSujRopc51uFIFCE\",\n  authDomain: \"social-media-v01.firebaseapp.com\",\n  projectId: \"social-media-v01\",\n  storageBucket: \"social-media-v01.appspot.com\",\n  messagingSenderId: \"305047774970\",\n  appId: \"1:305047774970:web:4cc6508545f9c60f8b0b43\",\n  measurementId: \"G-WCEC3DFML1\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n return (\n   <div className=\"App\">\n     <header>\n      <h1>Sample Social Media Chat </h1>\n      <SignOut/>\n     </header>\n     <section>\n       {user ? <ChatRoom /> : <SignIn/>}\n     </section>\n   </div>\n )\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      auth.signInWithPopup(provider);\n  }\n  return (\n      <button onClick={signInWithGoogle}>Sign In with Google</button>\n  )\n};\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {idField: 'id'});\n  const [formValue, setFormValue] = useState('');\n  const sendMessage = async(e) => {\n    e.preventDefault();\n    const { uid, photoURL } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth'});\n  };\n\n  return (<>\n    <main>\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n      <span ref={dummy}></span>\n    </main>\n    <form onSubmit={sendMessage}>\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"insert text\"/>\n      <button type=\"submit\" disabled={!formValue}>Submit</button>\n    </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const {text, uid, photoURL } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return (\n  <div className={`message ${messageClass}`}>\n    <img src={photoURL} alt=\"user pic\"/>\n     <p>{text}</p>\n  </div>\n  \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}